# server port (env override, default 8080)
server.port=8080

# Resource server (uses AZURE_TENANT_ID from env)
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://login.microsoftonline.com/YOUR_ENTRA_ID_TENANT_ID/v2.0

# magi-core settings (override from env, fallback to localhost:9000)
magi.core.base-url=http://localhost:8081
magi.core.scope=api://MAGI_CORE_APP_CLIENT_ID/user_impersonation

# Azure client (inject secrets via env)
azure.client.id=YOUR_MAGI_BFF_APP_CLIENT_ID
azure.client.secret=YOUR_MAGI_BFF_APP_CLIENT_SECRET
azure.client.tenant-id=YOUR_ENTRA_ID_TENANT_ID

# token endpoint; uses tenant id placeholder â€” ensure this file is populated with actual tenant id at runtime
azure.authority=https://login.microsoftonline.com/${azure.client.tenant-id}/oauth2/v2.0
azure.token-uri=${azure.authority}/token

# Spring profile
spring.application.name=MagiSystem-BFF
bff.core.base-url=http://localhost:8081/api/magi
spring.profiles.active=local

# Logging level
# logging.level.jp.mappiekochi.sample.magisystem.bff=DEBUG
# logging.level.root=DEBUG
